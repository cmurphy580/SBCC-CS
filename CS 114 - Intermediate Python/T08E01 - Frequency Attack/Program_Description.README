The purpose of this assignment is to have you write a command line program that is installable with pip and can perform a basic frequency analysis based attack (Links to an external site.)Links to an external site. on a weak subtitution cipher.

Program Description
The program is invoked from the command line using the following syntax:

frequency -f frequency.csv ciphertext.txt

The file frequency.csv is a list of the frequency distribution of all the words in the cleartext. This is basically a more directed version of the frequency of words in the English language. The file ciphertext.txt is the cipher text that you need to decrypt.

The output will look like the following:

Letter    ABCDEFGHIJKLMNOPQRSTUVWXYZ
          --------------------------
Predicted JKBXQVYLH!EIOSPZ!CWDAMRNT!
Cleartext
Following the word Cleartext will be the cleartext generated by decrypting the ciphertext.txt file. You can cut and paste that into Google to figure out which book the cleartext originates.

Program Specification
I expect your python directory to look similar to the following:

├── LICENSE
├── README.md
├── setup.py
└── frequency
    ├── __init__.py
    ├── cipher.py
    └── command_line.py
Feel free to add other modules if it will help you develop the code. When complete you should be able to pip install this module using pip install . from the top level directory.

cipher.py should be a Cipher() object that has the following method signature:

def __init__(self, key=None): - The key is a string of all uppercase letters which substitute for A-Z. It's shown by the predicted line above. If no key is passed then a string of A-Z is used.

def decrypt(self, ciphertext): - This takes a string and decrypts it into plaintext.

command_line.py is the main code that parses the command line and performs the frequency attack. Feel free to add other modules or functions to assist you.

Note
Don't forget to include proper docstrings.
Comments should explain HOW you accomplished the functionality, docstrings describe the functionality.
from collections import Counter might be useful.
string.ascii_uppercase can also be useful.
Look at your data files (ciphertext.txt and frequency.csv) before coding anything!
The reading has an example that can be modified for setup.py.
Be sure to pip install it to make sure it works.
If you don't find a letter put a ! in that letter's position. See the letter Z above.
